Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function_declaration program
Rule 2     program -> empty
Rule 3     line -> statement SEMICOLON
Rule 4     line -> expression SEMICOLON
Rule 5     line -> loop_statement
Rule 6     line -> if_statement
Rule 7     statement -> ID EQUALS expression
Rule 8     statement -> declaration EQUALS expression
Rule 9     statement -> VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
Rule 10    function_declaration -> type ID LPAREN args RPAREN LBRACKET body RBRACKET
Rule 11    declaration -> type ID
Rule 12    body -> line body
Rule 13    body -> empty
Rule 14    if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
Rule 15    if_statement -> IF LPAREN expression RPAREN line else_statement
Rule 16    else_statement -> ELSE LBRACKET body RBRACKET
Rule 17    else_statement -> ELSE line
Rule 18    else_statement -> empty
Rule 19    loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
Rule 20    loop_statement -> WHILE LPAREN expression RPAREN line
Rule 21    loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
Rule 22    loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
Rule 23    args -> declaration COMMA args
Rule 24    args -> declaration
Rule 25    args -> empty
Rule 26    function_args -> expression COMMA function_args
Rule 27    function_args -> expression
Rule 28    function_args -> empty
Rule 29    statement -> RETURN ID
Rule 30    statement -> RETURN expression
Rule 31    expression -> ID LPAREN function_args RPAREN
Rule 32    expression -> PRINTF LPAREN STRING COMMA function_args RPAREN
Rule 33    expression -> PRINTF LPAREN STRING RPAREN
Rule 34    statement -> ID INCREMENT
Rule 35    statement -> ID DECREMENT
Rule 36    expression -> expression COMPARISON expression
Rule 37    expression -> expression GREATER expression
Rule 38    expression -> expression LESS expression
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression TIMES expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression MODULO expression
Rule 44    statement -> expression PLUS EQUALS expression
Rule 45    statement -> expression MINUS EQUALS expression
Rule 46    statement -> expression TIMES EQUALS expression
Rule 47    statement -> expression DIVIDE EQUALS expression
Rule 48    statement -> expression MODULO EQUALS expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> NUMBER
Rule 51    expression -> ID
Rule 52    type -> INT
Rule 53    type -> FLOAT
Rule 54    type -> DOUBLE
Rule 55    type -> CHAR
Rule 56    empty -> <empty>

Terminals, with rules where they appear

CHAR                 : 55
COMMA                : 23 26 32
COMPARISON           : 36
DECREMENT            : 35
DIVIDE               : 42 47
DOUBLE               : 54
ELSE                 : 16 17
EQUALS               : 7 8 44 45 46 47 48
FLOAT                : 53
FOR                  : 21 22
GREATER              : 37
ID                   : 7 9 10 11 29 31 34 35 51
IF                   : 14 15
INCREMENT            : 34
INT                  : 52
LBRACKET             : 9 10 14 16 19 21
LESS                 : 38
LPAREN               : 9 10 14 15 19 20 21 22 31 32 33 49
MINUS                : 40 45
MODULO               : 43 48
NUMBER               : 50
PLUS                 : 39 44
PRINTF               : 32 33
RBRACKET             : 9 10 14 16 19 21
RETURN               : 29 30
RPAREN               : 9 10 14 15 19 20 21 22 31 32 33 49
SEMICOLON            : 3 4 21 21 22 22
STRING               : 32 33
TIMES                : 41 46
VOID                 : 9
WHILE                : 19 20
error                : 

Nonterminals, with rules where they appear

args                 : 9 10 23
body                 : 9 10 12 14 16 19 21
declaration          : 8 23 24
else_statement       : 14 15
empty                : 2 13 18 25 28
expression           : 4 7 8 14 15 19 20 21 22 26 27 30 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49
function_args        : 26 31 32
function_declaration : 1
if_statement         : 6
line                 : 12 15 17 20 22
loop_statement       : 5
program              : 1 0
statement            : 3 21 21 22 22
type                 : 10 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function_declaration program
    (2) program -> . empty
    (10) function_declaration -> . type ID LPAREN args RPAREN LBRACKET body RBRACKET
    (56) empty -> .
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    $end            reduce using rule 56 (empty -> .)
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    program                        shift and go to state 1
    function_declaration           shift and go to state 2
    empty                          shift and go to state 3
    type                           shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> function_declaration . program
    (1) program -> . function_declaration program
    (2) program -> . empty
    (10) function_declaration -> . type ID LPAREN args RPAREN LBRACKET body RBRACKET
    (56) empty -> .
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    $end            reduce using rule 56 (empty -> .)
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    function_declaration           shift and go to state 2
    program                        shift and go to state 9
    empty                          shift and go to state 3
    type                           shift and go to state 4

state 3

    (2) program -> empty .

    $end            reduce using rule 2 (program -> empty .)


state 4

    (10) function_declaration -> type . ID LPAREN args RPAREN LBRACKET body RBRACKET

    ID              shift and go to state 10


state 5

    (52) type -> INT .

    ID              reduce using rule 52 (type -> INT .)


state 6

    (53) type -> FLOAT .

    ID              reduce using rule 53 (type -> FLOAT .)


state 7

    (54) type -> DOUBLE .

    ID              reduce using rule 54 (type -> DOUBLE .)


state 8

    (55) type -> CHAR .

    ID              reduce using rule 55 (type -> CHAR .)


state 9

    (1) program -> function_declaration program .

    $end            reduce using rule 1 (program -> function_declaration program .)


state 10

    (10) function_declaration -> type ID . LPAREN args RPAREN LBRACKET body RBRACKET

    LPAREN          shift and go to state 11


state 11

    (10) function_declaration -> type ID LPAREN . args RPAREN LBRACKET body RBRACKET
    (23) args -> . declaration COMMA args
    (24) args -> . declaration
    (25) args -> . empty
    (11) declaration -> . type ID
    (56) empty -> .
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RPAREN          reduce using rule 56 (empty -> .)
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    type                           shift and go to state 12
    args                           shift and go to state 13
    declaration                    shift and go to state 14
    empty                          shift and go to state 15

state 12

    (11) declaration -> type . ID

    ID              shift and go to state 16


state 13

    (10) function_declaration -> type ID LPAREN args . RPAREN LBRACKET body RBRACKET

    RPAREN          shift and go to state 17


state 14

    (23) args -> declaration . COMMA args
    (24) args -> declaration .

    COMMA           shift and go to state 18
    RPAREN          reduce using rule 24 (args -> declaration .)


state 15

    (25) args -> empty .

    RPAREN          reduce using rule 25 (args -> empty .)


state 16

    (11) declaration -> type ID .

    COMMA           reduce using rule 11 (declaration -> type ID .)
    RPAREN          reduce using rule 11 (declaration -> type ID .)
    EQUALS          reduce using rule 11 (declaration -> type ID .)


state 17

    (10) function_declaration -> type ID LPAREN args RPAREN . LBRACKET body RBRACKET

    LBRACKET        shift and go to state 19


state 18

    (23) args -> declaration COMMA . args
    (23) args -> . declaration COMMA args
    (24) args -> . declaration
    (25) args -> . empty
    (11) declaration -> . type ID
    (56) empty -> .
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RPAREN          reduce using rule 56 (empty -> .)
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    declaration                    shift and go to state 14
    args                           shift and go to state 20
    empty                          shift and go to state 15
    type                           shift and go to state 12

state 19

    (10) function_declaration -> type ID LPAREN args RPAREN LBRACKET . body RBRACKET
    (12) body -> . line body
    (13) body -> . empty
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (56) empty -> .
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RBRACKET        reduce using rule 56 (empty -> .)
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    type                           shift and go to state 12
    body                           shift and go to state 23
    line                           shift and go to state 24
    empty                          shift and go to state 25
    statement                      shift and go to state 26
    expression                     shift and go to state 27
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30

state 20

    (23) args -> declaration COMMA args .

    RPAREN          reduce using rule 23 (args -> declaration COMMA args .)


state 21

    (7) statement -> ID . EQUALS expression
    (34) statement -> ID . INCREMENT
    (35) statement -> ID . DECREMENT
    (31) expression -> ID . LPAREN function_args RPAREN
    (51) expression -> ID .

    EQUALS          shift and go to state 38
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 41
    SEMICOLON       reduce using rule 51 (expression -> ID .)
    PLUS            reduce using rule 51 (expression -> ID .)
    MINUS           reduce using rule 51 (expression -> ID .)
    TIMES           reduce using rule 51 (expression -> ID .)
    DIVIDE          reduce using rule 51 (expression -> ID .)
    MODULO          reduce using rule 51 (expression -> ID .)
    COMPARISON      reduce using rule 51 (expression -> ID .)
    GREATER         reduce using rule 51 (expression -> ID .)
    LESS            reduce using rule 51 (expression -> ID .)


state 22

    (49) expression -> LPAREN . expression RPAREN
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 42

state 23

    (10) function_declaration -> type ID LPAREN args RPAREN LBRACKET body . RBRACKET

    RBRACKET        shift and go to state 44


state 24

    (12) body -> line . body
    (12) body -> . line body
    (13) body -> . empty
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (56) empty -> .
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RBRACKET        reduce using rule 56 (empty -> .)
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    line                           shift and go to state 24
    body                           shift and go to state 45
    empty                          shift and go to state 25
    statement                      shift and go to state 26
    expression                     shift and go to state 27
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 25

    (13) body -> empty .

    RBRACKET        reduce using rule 13 (body -> empty .)


state 26

    (3) line -> statement . SEMICOLON

    SEMICOLON       shift and go to state 46


state 27

    (4) line -> expression . SEMICOLON
    (44) statement -> expression . PLUS EQUALS expression
    (45) statement -> expression . MINUS EQUALS expression
    (46) statement -> expression . TIMES EQUALS expression
    (47) statement -> expression . DIVIDE EQUALS expression
    (48) statement -> expression . MODULO EQUALS expression
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       shift and go to state 47
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 52
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55


state 28

    (5) line -> loop_statement .

    ID              reduce using rule 5 (line -> loop_statement .)
    VOID            reduce using rule 5 (line -> loop_statement .)
    RETURN          reduce using rule 5 (line -> loop_statement .)
    PRINTF          reduce using rule 5 (line -> loop_statement .)
    LPAREN          reduce using rule 5 (line -> loop_statement .)
    NUMBER          reduce using rule 5 (line -> loop_statement .)
    WHILE           reduce using rule 5 (line -> loop_statement .)
    FOR             reduce using rule 5 (line -> loop_statement .)
    IF              reduce using rule 5 (line -> loop_statement .)
    INT             reduce using rule 5 (line -> loop_statement .)
    FLOAT           reduce using rule 5 (line -> loop_statement .)
    DOUBLE          reduce using rule 5 (line -> loop_statement .)
    CHAR            reduce using rule 5 (line -> loop_statement .)
    RBRACKET        reduce using rule 5 (line -> loop_statement .)
    ELSE            reduce using rule 5 (line -> loop_statement .)


state 29

    (6) line -> if_statement .

    ID              reduce using rule 6 (line -> if_statement .)
    VOID            reduce using rule 6 (line -> if_statement .)
    RETURN          reduce using rule 6 (line -> if_statement .)
    PRINTF          reduce using rule 6 (line -> if_statement .)
    LPAREN          reduce using rule 6 (line -> if_statement .)
    NUMBER          reduce using rule 6 (line -> if_statement .)
    WHILE           reduce using rule 6 (line -> if_statement .)
    FOR             reduce using rule 6 (line -> if_statement .)
    IF              reduce using rule 6 (line -> if_statement .)
    INT             reduce using rule 6 (line -> if_statement .)
    FLOAT           reduce using rule 6 (line -> if_statement .)
    DOUBLE          reduce using rule 6 (line -> if_statement .)
    CHAR            reduce using rule 6 (line -> if_statement .)
    RBRACKET        reduce using rule 6 (line -> if_statement .)
    ELSE            reduce using rule 6 (line -> if_statement .)


state 30

    (8) statement -> declaration . EQUALS expression

    EQUALS          shift and go to state 56


state 31

    (9) statement -> VOID . ID LPAREN args RPAREN LBRACKET body RBRACKET

    ID              shift and go to state 57


state 32

    (29) statement -> RETURN . ID
    (30) statement -> RETURN . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 58
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 59

state 33

    (32) expression -> PRINTF . LPAREN STRING COMMA function_args RPAREN
    (33) expression -> PRINTF . LPAREN STRING RPAREN

    LPAREN          shift and go to state 60


state 34

    (50) expression -> NUMBER .

    SEMICOLON       reduce using rule 50 (expression -> NUMBER .)
    PLUS            reduce using rule 50 (expression -> NUMBER .)
    MINUS           reduce using rule 50 (expression -> NUMBER .)
    TIMES           reduce using rule 50 (expression -> NUMBER .)
    DIVIDE          reduce using rule 50 (expression -> NUMBER .)
    MODULO          reduce using rule 50 (expression -> NUMBER .)
    COMPARISON      reduce using rule 50 (expression -> NUMBER .)
    GREATER         reduce using rule 50 (expression -> NUMBER .)
    LESS            reduce using rule 50 (expression -> NUMBER .)
    RPAREN          reduce using rule 50 (expression -> NUMBER .)
    COMMA           reduce using rule 50 (expression -> NUMBER .)


state 35

    (19) loop_statement -> WHILE . LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> WHILE . LPAREN expression RPAREN line

    LPAREN          shift and go to state 61


state 36

    (21) loop_statement -> FOR . LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> FOR . LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line

    LPAREN          shift and go to state 62


state 37

    (14) if_statement -> IF . LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> IF . LPAREN expression RPAREN line else_statement

    LPAREN          shift and go to state 63


state 38

    (7) statement -> ID EQUALS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 64

state 39

    (34) statement -> ID INCREMENT .

    SEMICOLON       reduce using rule 34 (statement -> ID INCREMENT .)
    RPAREN          reduce using rule 34 (statement -> ID INCREMENT .)


state 40

    (35) statement -> ID DECREMENT .

    SEMICOLON       reduce using rule 35 (statement -> ID DECREMENT .)
    RPAREN          reduce using rule 35 (statement -> ID DECREMENT .)


state 41

    (31) expression -> ID LPAREN . function_args RPAREN
    (26) function_args -> . expression COMMA function_args
    (27) function_args -> . expression
    (28) function_args -> . empty
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (56) empty -> .

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    RPAREN          reduce using rule 56 (empty -> .)

    function_args                  shift and go to state 65
    expression                     shift and go to state 66
    empty                          shift and go to state 67

state 42

    (49) expression -> LPAREN expression . RPAREN
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    RPAREN          shift and go to state 68
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 43

    (31) expression -> ID . LPAREN function_args RPAREN
    (51) expression -> ID .

    LPAREN          shift and go to state 41
    RPAREN          reduce using rule 51 (expression -> ID .)
    COMPARISON      reduce using rule 51 (expression -> ID .)
    GREATER         reduce using rule 51 (expression -> ID .)
    LESS            reduce using rule 51 (expression -> ID .)
    PLUS            reduce using rule 51 (expression -> ID .)
    MINUS           reduce using rule 51 (expression -> ID .)
    TIMES           reduce using rule 51 (expression -> ID .)
    DIVIDE          reduce using rule 51 (expression -> ID .)
    MODULO          reduce using rule 51 (expression -> ID .)
    SEMICOLON       reduce using rule 51 (expression -> ID .)
    COMMA           reduce using rule 51 (expression -> ID .)


state 44

    (10) function_declaration -> type ID LPAREN args RPAREN LBRACKET body RBRACKET .

    INT             reduce using rule 10 (function_declaration -> type ID LPAREN args RPAREN LBRACKET body RBRACKET .)
    FLOAT           reduce using rule 10 (function_declaration -> type ID LPAREN args RPAREN LBRACKET body RBRACKET .)
    DOUBLE          reduce using rule 10 (function_declaration -> type ID LPAREN args RPAREN LBRACKET body RBRACKET .)
    CHAR            reduce using rule 10 (function_declaration -> type ID LPAREN args RPAREN LBRACKET body RBRACKET .)
    $end            reduce using rule 10 (function_declaration -> type ID LPAREN args RPAREN LBRACKET body RBRACKET .)


state 45

    (12) body -> line body .

    RBRACKET        reduce using rule 12 (body -> line body .)


state 46

    (3) line -> statement SEMICOLON .

    ID              reduce using rule 3 (line -> statement SEMICOLON .)
    VOID            reduce using rule 3 (line -> statement SEMICOLON .)
    RETURN          reduce using rule 3 (line -> statement SEMICOLON .)
    PRINTF          reduce using rule 3 (line -> statement SEMICOLON .)
    LPAREN          reduce using rule 3 (line -> statement SEMICOLON .)
    NUMBER          reduce using rule 3 (line -> statement SEMICOLON .)
    WHILE           reduce using rule 3 (line -> statement SEMICOLON .)
    FOR             reduce using rule 3 (line -> statement SEMICOLON .)
    IF              reduce using rule 3 (line -> statement SEMICOLON .)
    INT             reduce using rule 3 (line -> statement SEMICOLON .)
    FLOAT           reduce using rule 3 (line -> statement SEMICOLON .)
    DOUBLE          reduce using rule 3 (line -> statement SEMICOLON .)
    CHAR            reduce using rule 3 (line -> statement SEMICOLON .)
    RBRACKET        reduce using rule 3 (line -> statement SEMICOLON .)
    ELSE            reduce using rule 3 (line -> statement SEMICOLON .)


state 47

    (4) line -> expression SEMICOLON .

    ID              reduce using rule 4 (line -> expression SEMICOLON .)
    VOID            reduce using rule 4 (line -> expression SEMICOLON .)
    RETURN          reduce using rule 4 (line -> expression SEMICOLON .)
    PRINTF          reduce using rule 4 (line -> expression SEMICOLON .)
    LPAREN          reduce using rule 4 (line -> expression SEMICOLON .)
    NUMBER          reduce using rule 4 (line -> expression SEMICOLON .)
    WHILE           reduce using rule 4 (line -> expression SEMICOLON .)
    FOR             reduce using rule 4 (line -> expression SEMICOLON .)
    IF              reduce using rule 4 (line -> expression SEMICOLON .)
    INT             reduce using rule 4 (line -> expression SEMICOLON .)
    FLOAT           reduce using rule 4 (line -> expression SEMICOLON .)
    DOUBLE          reduce using rule 4 (line -> expression SEMICOLON .)
    CHAR            reduce using rule 4 (line -> expression SEMICOLON .)
    RBRACKET        reduce using rule 4 (line -> expression SEMICOLON .)
    ELSE            reduce using rule 4 (line -> expression SEMICOLON .)


state 48

    (44) statement -> expression PLUS . EQUALS expression
    (39) expression -> expression PLUS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    EQUALS          shift and go to state 75
    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 74

state 49

    (45) statement -> expression MINUS . EQUALS expression
    (40) expression -> expression MINUS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    EQUALS          shift and go to state 77
    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 76

state 50

    (46) statement -> expression TIMES . EQUALS expression
    (41) expression -> expression TIMES . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    EQUALS          shift and go to state 79
    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 78

state 51

    (47) statement -> expression DIVIDE . EQUALS expression
    (42) expression -> expression DIVIDE . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    EQUALS          shift and go to state 81
    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 80

state 52

    (48) statement -> expression MODULO . EQUALS expression
    (43) expression -> expression MODULO . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    EQUALS          shift and go to state 83
    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 82

state 53

    (36) expression -> expression COMPARISON . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 84

state 54

    (37) expression -> expression GREATER . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 85

state 55

    (38) expression -> expression LESS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 86

state 56

    (8) statement -> declaration EQUALS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 87

state 57

    (9) statement -> VOID ID . LPAREN args RPAREN LBRACKET body RBRACKET

    LPAREN          shift and go to state 88


state 58

    (29) statement -> RETURN ID .
    (31) expression -> ID . LPAREN function_args RPAREN
    (51) expression -> ID .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 29 (statement -> RETURN ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 29 (statement -> RETURN ID .)
    SEMICOLON       reduce using rule 29 (statement -> RETURN ID .)
    RPAREN          reduce using rule 29 (statement -> RETURN ID .)
    LPAREN          shift and go to state 41
    COMPARISON      reduce using rule 51 (expression -> ID .)
    GREATER         reduce using rule 51 (expression -> ID .)
    LESS            reduce using rule 51 (expression -> ID .)
    PLUS            reduce using rule 51 (expression -> ID .)
    MINUS           reduce using rule 51 (expression -> ID .)
    TIMES           reduce using rule 51 (expression -> ID .)
    DIVIDE          reduce using rule 51 (expression -> ID .)
    MODULO          reduce using rule 51 (expression -> ID .)

  ! SEMICOLON       [ reduce using rule 51 (expression -> ID .) ]
  ! RPAREN          [ reduce using rule 51 (expression -> ID .) ]


state 59

    (30) statement -> RETURN expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       reduce using rule 30 (statement -> RETURN expression .)
    RPAREN          reduce using rule 30 (statement -> RETURN expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 60

    (32) expression -> PRINTF LPAREN . STRING COMMA function_args RPAREN
    (33) expression -> PRINTF LPAREN . STRING RPAREN

    STRING          shift and go to state 89


state 61

    (19) loop_statement -> WHILE LPAREN . expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> WHILE LPAREN . expression RPAREN line
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 90

state 62

    (21) loop_statement -> FOR LPAREN . statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> FOR LPAREN . statement SEMICOLON expression SEMICOLON statement RPAREN line
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (11) declaration -> . type ID
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    statement                      shift and go to state 91
    expression                     shift and go to state 92
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 63

    (14) if_statement -> IF LPAREN . expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> IF LPAREN . expression RPAREN line else_statement
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 93

state 64

    (7) statement -> ID EQUALS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       reduce using rule 7 (statement -> ID EQUALS expression .)
    RPAREN          reduce using rule 7 (statement -> ID EQUALS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 65

    (31) expression -> ID LPAREN function_args . RPAREN

    RPAREN          shift and go to state 94


state 66

    (26) function_args -> expression . COMMA function_args
    (27) function_args -> expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    COMMA           shift and go to state 95
    RPAREN          reduce using rule 27 (function_args -> expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 67

    (28) function_args -> empty .

    RPAREN          reduce using rule 28 (function_args -> empty .)


state 68

    (49) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMPARISON      reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 69

    (39) expression -> expression PLUS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 74

state 70

    (40) expression -> expression MINUS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 76

state 71

    (41) expression -> expression TIMES . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 78

state 72

    (42) expression -> expression DIVIDE . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 80

state 73

    (43) expression -> expression MODULO . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 82

state 74

    (39) expression -> expression PLUS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    SEMICOLON       reduce using rule 39 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 39 (expression -> expression PLUS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73

  ! PLUS            [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! COMPARISON      [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> expression PLUS expression .) ]


state 75

    (44) statement -> expression PLUS EQUALS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 96

state 76

    (40) expression -> expression MINUS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    SEMICOLON       reduce using rule 40 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 40 (expression -> expression MINUS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73

  ! PLUS            [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! COMPARISON      [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 40 (expression -> expression MINUS expression .) ]


state 77

    (45) statement -> expression MINUS EQUALS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 97

state 78

    (41) expression -> expression TIMES expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    SEMICOLON       reduce using rule 41 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 41 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 41 (expression -> expression TIMES expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73

  ! PLUS            [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MODULO          [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! COMPARISON      [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! GREATER         [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! LESS            [ reduce using rule 41 (expression -> expression TIMES expression .) ]


state 79

    (46) statement -> expression TIMES EQUALS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 98

state 80

    (42) expression -> expression DIVIDE expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    SEMICOLON       reduce using rule 42 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 42 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 42 (expression -> expression DIVIDE expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73

  ! PLUS            [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! MODULO          [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! COMPARISON      [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! GREATER         [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! LESS            [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]


state 81

    (47) statement -> expression DIVIDE EQUALS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 99

state 82

    (43) expression -> expression MODULO expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    SEMICOLON       reduce using rule 43 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 43 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 43 (expression -> expression MODULO expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73

  ! PLUS            [ reduce using rule 43 (expression -> expression MODULO expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression MODULO expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression MODULO expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression MODULO expression .) ]
  ! MODULO          [ reduce using rule 43 (expression -> expression MODULO expression .) ]
  ! COMPARISON      [ reduce using rule 43 (expression -> expression MODULO expression .) ]
  ! GREATER         [ reduce using rule 43 (expression -> expression MODULO expression .) ]
  ! LESS            [ reduce using rule 43 (expression -> expression MODULO expression .) ]


state 83

    (48) statement -> expression MODULO EQUALS . expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 100

state 84

    (36) expression -> expression COMPARISON expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    SEMICOLON       reduce using rule 36 (expression -> expression COMPARISON expression .)
    RPAREN          reduce using rule 36 (expression -> expression COMPARISON expression .)
    COMMA           reduce using rule 36 (expression -> expression COMPARISON expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73

  ! PLUS            [ reduce using rule 36 (expression -> expression COMPARISON expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression COMPARISON expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression COMPARISON expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression COMPARISON expression .) ]
  ! MODULO          [ reduce using rule 36 (expression -> expression COMPARISON expression .) ]
  ! COMPARISON      [ reduce using rule 36 (expression -> expression COMPARISON expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> expression COMPARISON expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> expression COMPARISON expression .) ]


state 85

    (37) expression -> expression GREATER expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    SEMICOLON       reduce using rule 37 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 37 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 37 (expression -> expression GREATER expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73

  ! PLUS            [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! MODULO          [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! COMPARISON      [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 37 (expression -> expression GREATER expression .) ]


state 86

    (38) expression -> expression LESS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

  ! shift/reduce conflict for COMPARISON resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    SEMICOLON       reduce using rule 38 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 38 (expression -> expression LESS expression .)
    COMMA           reduce using rule 38 (expression -> expression LESS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73

  ! PLUS            [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! MODULO          [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! COMPARISON      [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 38 (expression -> expression LESS expression .) ]


state 87

    (8) statement -> declaration EQUALS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       reduce using rule 8 (statement -> declaration EQUALS expression .)
    RPAREN          reduce using rule 8 (statement -> declaration EQUALS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 88

    (9) statement -> VOID ID LPAREN . args RPAREN LBRACKET body RBRACKET
    (23) args -> . declaration COMMA args
    (24) args -> . declaration
    (25) args -> . empty
    (11) declaration -> . type ID
    (56) empty -> .
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RPAREN          reduce using rule 56 (empty -> .)
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    args                           shift and go to state 101
    declaration                    shift and go to state 14
    empty                          shift and go to state 15
    type                           shift and go to state 12

state 89

    (32) expression -> PRINTF LPAREN STRING . COMMA function_args RPAREN
    (33) expression -> PRINTF LPAREN STRING . RPAREN

    COMMA           shift and go to state 102
    RPAREN          shift and go to state 103


state 90

    (19) loop_statement -> WHILE LPAREN expression . RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> WHILE LPAREN expression . RPAREN line
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    RPAREN          shift and go to state 104
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 91

    (21) loop_statement -> FOR LPAREN statement . SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> FOR LPAREN statement . SEMICOLON expression SEMICOLON statement RPAREN line

    SEMICOLON       shift and go to state 105


state 92

    (44) statement -> expression . PLUS EQUALS expression
    (45) statement -> expression . MINUS EQUALS expression
    (46) statement -> expression . TIMES EQUALS expression
    (47) statement -> expression . DIVIDE EQUALS expression
    (48) statement -> expression . MODULO EQUALS expression
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 52
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55


state 93

    (14) if_statement -> IF LPAREN expression . RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> IF LPAREN expression . RPAREN line else_statement
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    RPAREN          shift and go to state 106
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 94

    (31) expression -> ID LPAREN function_args RPAREN .

    SEMICOLON       reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    PLUS            reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    MINUS           reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    TIMES           reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    DIVIDE          reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    MODULO          reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    COMPARISON      reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    GREATER         reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    LESS            reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    RPAREN          reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)
    COMMA           reduce using rule 31 (expression -> ID LPAREN function_args RPAREN .)


state 95

    (26) function_args -> expression COMMA . function_args
    (26) function_args -> . expression COMMA function_args
    (27) function_args -> . expression
    (28) function_args -> . empty
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (56) empty -> .

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    RPAREN          reduce using rule 56 (empty -> .)

    expression                     shift and go to state 66
    function_args                  shift and go to state 107
    empty                          shift and go to state 67

state 96

    (44) statement -> expression PLUS EQUALS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       reduce using rule 44 (statement -> expression PLUS EQUALS expression .)
    RPAREN          reduce using rule 44 (statement -> expression PLUS EQUALS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 97

    (45) statement -> expression MINUS EQUALS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       reduce using rule 45 (statement -> expression MINUS EQUALS expression .)
    RPAREN          reduce using rule 45 (statement -> expression MINUS EQUALS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 98

    (46) statement -> expression TIMES EQUALS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       reduce using rule 46 (statement -> expression TIMES EQUALS expression .)
    RPAREN          reduce using rule 46 (statement -> expression TIMES EQUALS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 99

    (47) statement -> expression DIVIDE EQUALS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       reduce using rule 47 (statement -> expression DIVIDE EQUALS expression .)
    RPAREN          reduce using rule 47 (statement -> expression DIVIDE EQUALS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 100

    (48) statement -> expression MODULO EQUALS expression .
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       reduce using rule 48 (statement -> expression MODULO EQUALS expression .)
    RPAREN          reduce using rule 48 (statement -> expression MODULO EQUALS expression .)
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 101

    (9) statement -> VOID ID LPAREN args . RPAREN LBRACKET body RBRACKET

    RPAREN          shift and go to state 108


state 102

    (32) expression -> PRINTF LPAREN STRING COMMA . function_args RPAREN
    (26) function_args -> . expression COMMA function_args
    (27) function_args -> . expression
    (28) function_args -> . empty
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (56) empty -> .

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    RPAREN          reduce using rule 56 (empty -> .)

    function_args                  shift and go to state 109
    expression                     shift and go to state 66
    empty                          shift and go to state 67

state 103

    (33) expression -> PRINTF LPAREN STRING RPAREN .

    SEMICOLON       reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    PLUS            reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    MINUS           reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    TIMES           reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    DIVIDE          reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    MODULO          reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    COMPARISON      reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    GREATER         reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    LESS            reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)
    COMMA           reduce using rule 33 (expression -> PRINTF LPAREN STRING RPAREN .)


state 104

    (19) loop_statement -> WHILE LPAREN expression RPAREN . LBRACKET body RBRACKET
    (20) loop_statement -> WHILE LPAREN expression RPAREN . line
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    LBRACKET        shift and go to state 110
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    expression                     shift and go to state 27
    line                           shift and go to state 111
    statement                      shift and go to state 26
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 105

    (21) loop_statement -> FOR LPAREN statement SEMICOLON . expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> FOR LPAREN statement SEMICOLON . expression SEMICOLON statement RPAREN line
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID

    ID              shift and go to state 43
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34

    expression                     shift and go to state 112

state 106

    (14) if_statement -> IF LPAREN expression RPAREN . LBRACKET body RBRACKET else_statement
    (15) if_statement -> IF LPAREN expression RPAREN . line else_statement
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    LBRACKET        shift and go to state 113
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    expression                     shift and go to state 27
    line                           shift and go to state 114
    statement                      shift and go to state 26
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 107

    (26) function_args -> expression COMMA function_args .

    RPAREN          reduce using rule 26 (function_args -> expression COMMA function_args .)


state 108

    (9) statement -> VOID ID LPAREN args RPAREN . LBRACKET body RBRACKET

    LBRACKET        shift and go to state 115


state 109

    (32) expression -> PRINTF LPAREN STRING COMMA function_args . RPAREN

    RPAREN          shift and go to state 116


state 110

    (19) loop_statement -> WHILE LPAREN expression RPAREN LBRACKET . body RBRACKET
    (12) body -> . line body
    (13) body -> . empty
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (56) empty -> .
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RBRACKET        reduce using rule 56 (empty -> .)
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    expression                     shift and go to state 27
    body                           shift and go to state 117
    line                           shift and go to state 24
    empty                          shift and go to state 25
    statement                      shift and go to state 26
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 111

    (20) loop_statement -> WHILE LPAREN expression RPAREN line .

    ID              reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    VOID            reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    RETURN          reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    PRINTF          reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    LPAREN          reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    NUMBER          reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    WHILE           reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    FOR             reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    IF              reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    INT             reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    FLOAT           reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    DOUBLE          reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    CHAR            reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    RBRACKET        reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)
    ELSE            reduce using rule 20 (loop_statement -> WHILE LPAREN expression RPAREN line .)


state 112

    (21) loop_statement -> FOR LPAREN statement SEMICOLON expression . SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> FOR LPAREN statement SEMICOLON expression . SEMICOLON statement RPAREN line
    (36) expression -> expression . COMPARISON expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULO expression

    SEMICOLON       shift and go to state 118
    COMPARISON      shift and go to state 53
    GREATER         shift and go to state 54
    LESS            shift and go to state 55
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MODULO          shift and go to state 73


state 113

    (14) if_statement -> IF LPAREN expression RPAREN LBRACKET . body RBRACKET else_statement
    (12) body -> . line body
    (13) body -> . empty
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (56) empty -> .
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RBRACKET        reduce using rule 56 (empty -> .)
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    expression                     shift and go to state 27
    body                           shift and go to state 119
    line                           shift and go to state 24
    empty                          shift and go to state 25
    statement                      shift and go to state 26
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 114

    (15) if_statement -> IF LPAREN expression RPAREN line . else_statement
    (16) else_statement -> . ELSE LBRACKET body RBRACKET
    (17) else_statement -> . ELSE line
    (18) else_statement -> . empty
    (56) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 121
    ID              reduce using rule 56 (empty -> .)
    VOID            reduce using rule 56 (empty -> .)
    RETURN          reduce using rule 56 (empty -> .)
    PRINTF          reduce using rule 56 (empty -> .)
    LPAREN          reduce using rule 56 (empty -> .)
    NUMBER          reduce using rule 56 (empty -> .)
    WHILE           reduce using rule 56 (empty -> .)
    FOR             reduce using rule 56 (empty -> .)
    IF              reduce using rule 56 (empty -> .)
    INT             reduce using rule 56 (empty -> .)
    FLOAT           reduce using rule 56 (empty -> .)
    DOUBLE          reduce using rule 56 (empty -> .)
    CHAR            reduce using rule 56 (empty -> .)
    RBRACKET        reduce using rule 56 (empty -> .)

  ! ELSE            [ reduce using rule 56 (empty -> .) ]

    else_statement                 shift and go to state 120
    empty                          shift and go to state 122

state 115

    (9) statement -> VOID ID LPAREN args RPAREN LBRACKET . body RBRACKET
    (12) body -> . line body
    (13) body -> . empty
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (56) empty -> .
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RBRACKET        reduce using rule 56 (empty -> .)
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    body                           shift and go to state 123
    line                           shift and go to state 24
    empty                          shift and go to state 25
    statement                      shift and go to state 26
    expression                     shift and go to state 27
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 116

    (32) expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .

    SEMICOLON       reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    PLUS            reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    MINUS           reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    TIMES           reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    MODULO          reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    COMPARISON      reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    GREATER         reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    LESS            reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    RPAREN          reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)
    COMMA           reduce using rule 32 (expression -> PRINTF LPAREN STRING COMMA function_args RPAREN .)


state 117

    (19) loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body . RBRACKET

    RBRACKET        shift and go to state 124


state 118

    (21) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON . statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON . statement RPAREN line
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (11) declaration -> . type ID
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    statement                      shift and go to state 125
    expression                     shift and go to state 92
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 119

    (14) if_statement -> IF LPAREN expression RPAREN LBRACKET body . RBRACKET else_statement

    RBRACKET        shift and go to state 126


state 120

    (15) if_statement -> IF LPAREN expression RPAREN line else_statement .

    ID              reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    VOID            reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    RETURN          reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    PRINTF          reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    LPAREN          reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    NUMBER          reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    WHILE           reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    FOR             reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    IF              reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    INT             reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    FLOAT           reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    DOUBLE          reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    CHAR            reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    RBRACKET        reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)
    ELSE            reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN line else_statement .)


state 121

    (16) else_statement -> ELSE . LBRACKET body RBRACKET
    (17) else_statement -> ELSE . line
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    LBRACKET        shift and go to state 127
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    line                           shift and go to state 128
    statement                      shift and go to state 26
    expression                     shift and go to state 27
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 122

    (18) else_statement -> empty .

    ID              reduce using rule 18 (else_statement -> empty .)
    VOID            reduce using rule 18 (else_statement -> empty .)
    RETURN          reduce using rule 18 (else_statement -> empty .)
    PRINTF          reduce using rule 18 (else_statement -> empty .)
    LPAREN          reduce using rule 18 (else_statement -> empty .)
    NUMBER          reduce using rule 18 (else_statement -> empty .)
    WHILE           reduce using rule 18 (else_statement -> empty .)
    FOR             reduce using rule 18 (else_statement -> empty .)
    IF              reduce using rule 18 (else_statement -> empty .)
    INT             reduce using rule 18 (else_statement -> empty .)
    FLOAT           reduce using rule 18 (else_statement -> empty .)
    DOUBLE          reduce using rule 18 (else_statement -> empty .)
    CHAR            reduce using rule 18 (else_statement -> empty .)
    RBRACKET        reduce using rule 18 (else_statement -> empty .)
    ELSE            reduce using rule 18 (else_statement -> empty .)


state 123

    (9) statement -> VOID ID LPAREN args RPAREN LBRACKET body . RBRACKET

    RBRACKET        shift and go to state 129


state 124

    (19) loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .

    ID              reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    VOID            reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    RETURN          reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    PRINTF          reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    LPAREN          reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    NUMBER          reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    WHILE           reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    FOR             reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    IF              reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    INT             reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    FLOAT           reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    DOUBLE          reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    CHAR            reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    RBRACKET        reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)
    ELSE            reduce using rule 19 (loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET .)


state 125

    (21) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement . RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement . RPAREN line

    RPAREN          shift and go to state 130


state 126

    (14) if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET . else_statement
    (16) else_statement -> . ELSE LBRACKET body RBRACKET
    (17) else_statement -> . ELSE line
    (18) else_statement -> . empty
    (56) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 121
    ID              reduce using rule 56 (empty -> .)
    VOID            reduce using rule 56 (empty -> .)
    RETURN          reduce using rule 56 (empty -> .)
    PRINTF          reduce using rule 56 (empty -> .)
    LPAREN          reduce using rule 56 (empty -> .)
    NUMBER          reduce using rule 56 (empty -> .)
    WHILE           reduce using rule 56 (empty -> .)
    FOR             reduce using rule 56 (empty -> .)
    IF              reduce using rule 56 (empty -> .)
    INT             reduce using rule 56 (empty -> .)
    FLOAT           reduce using rule 56 (empty -> .)
    DOUBLE          reduce using rule 56 (empty -> .)
    CHAR            reduce using rule 56 (empty -> .)
    RBRACKET        reduce using rule 56 (empty -> .)

  ! ELSE            [ reduce using rule 56 (empty -> .) ]

    else_statement                 shift and go to state 131
    empty                          shift and go to state 122

state 127

    (16) else_statement -> ELSE LBRACKET . body RBRACKET
    (12) body -> . line body
    (13) body -> . empty
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (56) empty -> .
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RBRACKET        reduce using rule 56 (empty -> .)
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    body                           shift and go to state 132
    line                           shift and go to state 24
    empty                          shift and go to state 25
    statement                      shift and go to state 26
    expression                     shift and go to state 27
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 128

    (17) else_statement -> ELSE line .

    ID              reduce using rule 17 (else_statement -> ELSE line .)
    VOID            reduce using rule 17 (else_statement -> ELSE line .)
    RETURN          reduce using rule 17 (else_statement -> ELSE line .)
    PRINTF          reduce using rule 17 (else_statement -> ELSE line .)
    LPAREN          reduce using rule 17 (else_statement -> ELSE line .)
    NUMBER          reduce using rule 17 (else_statement -> ELSE line .)
    WHILE           reduce using rule 17 (else_statement -> ELSE line .)
    FOR             reduce using rule 17 (else_statement -> ELSE line .)
    IF              reduce using rule 17 (else_statement -> ELSE line .)
    INT             reduce using rule 17 (else_statement -> ELSE line .)
    FLOAT           reduce using rule 17 (else_statement -> ELSE line .)
    DOUBLE          reduce using rule 17 (else_statement -> ELSE line .)
    CHAR            reduce using rule 17 (else_statement -> ELSE line .)
    RBRACKET        reduce using rule 17 (else_statement -> ELSE line .)
    ELSE            reduce using rule 17 (else_statement -> ELSE line .)


state 129

    (9) statement -> VOID ID LPAREN args RPAREN LBRACKET body RBRACKET .

    SEMICOLON       reduce using rule 9 (statement -> VOID ID LPAREN args RPAREN LBRACKET body RBRACKET .)
    RPAREN          reduce using rule 9 (statement -> VOID ID LPAREN args RPAREN LBRACKET body RBRACKET .)


state 130

    (21) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN . LBRACKET body RBRACKET
    (22) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN . line
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    LBRACKET        shift and go to state 133
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    statement                      shift and go to state 26
    expression                     shift and go to state 27
    line                           shift and go to state 134
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 131

    (14) if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .

    ID              reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    VOID            reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    RETURN          reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    PRINTF          reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    LPAREN          reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    NUMBER          reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    WHILE           reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    FOR             reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    IF              reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    INT             reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    FLOAT           reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    DOUBLE          reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    CHAR            reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    RBRACKET        reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)
    ELSE            reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement .)


state 132

    (16) else_statement -> ELSE LBRACKET body . RBRACKET

    RBRACKET        shift and go to state 135


state 133

    (21) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET . body RBRACKET
    (12) body -> . line body
    (13) body -> . empty
    (3) line -> . statement SEMICOLON
    (4) line -> . expression SEMICOLON
    (5) line -> . loop_statement
    (6) line -> . if_statement
    (56) empty -> .
    (7) statement -> . ID EQUALS expression
    (8) statement -> . declaration EQUALS expression
    (9) statement -> . VOID ID LPAREN args RPAREN LBRACKET body RBRACKET
    (29) statement -> . RETURN ID
    (30) statement -> . RETURN expression
    (34) statement -> . ID INCREMENT
    (35) statement -> . ID DECREMENT
    (44) statement -> . expression PLUS EQUALS expression
    (45) statement -> . expression MINUS EQUALS expression
    (46) statement -> . expression TIMES EQUALS expression
    (47) statement -> . expression DIVIDE EQUALS expression
    (48) statement -> . expression MODULO EQUALS expression
    (31) expression -> . ID LPAREN function_args RPAREN
    (32) expression -> . PRINTF LPAREN STRING COMMA function_args RPAREN
    (33) expression -> . PRINTF LPAREN STRING RPAREN
    (36) expression -> . expression COMPARISON expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULO expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . ID
    (19) loop_statement -> . WHILE LPAREN expression RPAREN LBRACKET body RBRACKET
    (20) loop_statement -> . WHILE LPAREN expression RPAREN line
    (21) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET
    (22) loop_statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement
    (15) if_statement -> . IF LPAREN expression RPAREN line else_statement
    (11) declaration -> . type ID
    (52) type -> . INT
    (53) type -> . FLOAT
    (54) type -> . DOUBLE
    (55) type -> . CHAR

    RBRACKET        reduce using rule 56 (empty -> .)
    ID              shift and go to state 21
    VOID            shift and go to state 31
    RETURN          shift and go to state 32
    PRINTF          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    DOUBLE          shift and go to state 7
    CHAR            shift and go to state 8

    statement                      shift and go to state 26
    expression                     shift and go to state 27
    body                           shift and go to state 136
    line                           shift and go to state 24
    empty                          shift and go to state 25
    loop_statement                 shift and go to state 28
    if_statement                   shift and go to state 29
    declaration                    shift and go to state 30
    type                           shift and go to state 12

state 134

    (22) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .

    ID              reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    VOID            reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    RETURN          reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    PRINTF          reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    LPAREN          reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    NUMBER          reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    WHILE           reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    FOR             reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    IF              reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    INT             reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    FLOAT           reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    DOUBLE          reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    CHAR            reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    RBRACKET        reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)
    ELSE            reduce using rule 22 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line .)


state 135

    (16) else_statement -> ELSE LBRACKET body RBRACKET .

    ID              reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    VOID            reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    RETURN          reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    PRINTF          reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    LPAREN          reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    NUMBER          reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    WHILE           reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    FOR             reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    IF              reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    INT             reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    FLOAT           reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    DOUBLE          reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    CHAR            reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    RBRACKET        reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)
    ELSE            reduce using rule 16 (else_statement -> ELSE LBRACKET body RBRACKET .)


state 136

    (21) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body . RBRACKET

    RBRACKET        shift and go to state 137


state 137

    (21) loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .

    ID              reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    VOID            reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    RETURN          reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    PRINTF          reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    LPAREN          reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    NUMBER          reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    WHILE           reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    FOR             reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    IF              reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    INT             reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    FLOAT           reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    DOUBLE          reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    CHAR            reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    RBRACKET        reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)
    ELSE            reduce using rule 21 (loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMPARISON in state 74 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 74 resolved as shift
WARNING: shift/reduce conflict for LESS in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 74 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 76 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 76 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 78 resolved as shift
WARNING: shift/reduce conflict for LESS in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 78 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 78 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 80 resolved as shift
WARNING: shift/reduce conflict for LESS in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 80 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 82 resolved as shift
WARNING: shift/reduce conflict for LESS in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 82 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 84 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 84 resolved as shift
WARNING: shift/reduce conflict for LESS in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 84 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 85 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 85 resolved as shift
WARNING: shift/reduce conflict for LESS in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 85 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 85 resolved as shift
WARNING: shift/reduce conflict for COMPARISON in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 86 resolved as shift
WARNING: shift/reduce conflict for LESS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 86 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 86 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 114 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 126 resolved as shift
WARNING: reduce/reduce conflict in state 58 resolved using rule (statement -> RETURN ID)
WARNING: rejected rule (expression -> ID) in state 58
