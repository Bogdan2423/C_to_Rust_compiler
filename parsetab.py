
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR COMMA COMPARISON DECREMENT DIVIDE DOUBLE ELSE EQUALS FLOAT FOR GREATER ID IF INCREMENT INT LBRACKET LESS LPAREN MINUS MODULO NUMBER PLUS PRINTF RBRACKET RETURN RPAREN SEMICOLON STRING TIMES VOID WHILEprogram : function_declaration program\n                | emptyline : statement SEMICOLON\n            | expression SEMICOLON\n            | loop_statement\n            | if_statementstatement : ID EQUALS expression\n                | declaration EQUALS expressionstatement : VOID ID LPAREN args RPAREN LBRACKET body RBRACKETfunction_declaration : type ID LPAREN args RPAREN LBRACKET body RBRACKETdeclaration : type IDbody : line body\n            | emptyif_statement : IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement\n                    | IF LPAREN expression RPAREN line else_statement\n    else_statement : ELSE LBRACKET body RBRACKET\n                        | ELSE line\n                        | empty\n    loop_statement : WHILE LPAREN expression RPAREN LBRACKET body RBRACKET\n                        | WHILE LPAREN expression RPAREN line\n    loop_statement : FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET\n                        | FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line\n    args : declaration COMMA args\n            | declaration\n            | emptyfunction_args : expression COMMA function_args\n                    | expression\n                    | empty\n    statement : RETURN ID\n                | RETURN expressionexpression : ID LPAREN function_args RPAREN\n     expression : PRINTF LPAREN STRING COMMA function_args RPAREN\n                     | PRINTF LPAREN STRING RPARENstatement : ID INCREMENT\n                | ID DECREMENT\n    expression : expression COMPARISON expression\n                    | expression GREATER expression\n                    | expression LESS expression\n    expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MODULO expression\n    statement : expression PLUS EQUALS expression\n                      | expression MINUS EQUALS expression\n                      | expression TIMES EQUALS expression\n                      | expression DIVIDE EQUALS expression\n                      | expression MODULO EQUALS expression\n        expression : LPAREN expression RPARENexpression : NUMBERexpression : IDtype : INT\n              | FLOAT\n              | DOUBLE\n              | CHARempty :'
    
_lr_action_items = {'$end':([0,1,2,3,9,44,],[-56,0,-56,-2,-1,-10,]),'INT':([0,2,11,18,19,24,28,29,44,46,47,62,88,104,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[5,5,5,5,5,5,-5,-6,-10,-3,-4,5,5,5,5,5,-20,5,-56,5,5,-15,5,-18,-19,-56,5,-17,5,-14,5,-22,-16,-21,]),'FLOAT':([0,2,11,18,19,24,28,29,44,46,47,62,88,104,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[6,6,6,6,6,6,-5,-6,-10,-3,-4,6,6,6,6,6,-20,6,-56,6,6,-15,6,-18,-19,-56,6,-17,6,-14,6,-22,-16,-21,]),'DOUBLE':([0,2,11,18,19,24,28,29,44,46,47,62,88,104,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[7,7,7,7,7,7,-5,-6,-10,-3,-4,7,7,7,7,7,-20,7,-56,7,7,-15,7,-18,-19,-56,7,-17,7,-14,7,-22,-16,-21,]),'CHAR':([0,2,11,18,19,24,28,29,44,46,47,62,88,104,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[8,8,8,8,8,8,-5,-6,-10,-3,-4,8,8,8,8,8,-20,8,-56,8,8,-15,8,-18,-19,-56,8,-17,8,-14,8,-22,-16,-21,]),'ID':([4,5,6,7,8,12,19,22,24,28,29,31,32,38,41,46,47,48,49,50,51,52,53,54,55,56,61,62,63,69,70,71,72,73,75,77,79,81,83,95,102,104,105,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[10,-52,-53,-54,-55,16,21,43,21,-5,-6,57,58,43,43,-3,-4,43,43,43,43,43,43,43,43,43,43,21,43,43,43,43,43,43,43,43,43,43,43,43,43,21,43,21,21,-20,21,-56,21,21,-15,21,-18,-19,-56,21,-17,21,-14,21,-22,-16,-21,]),'LPAREN':([10,19,21,22,24,28,29,32,33,35,36,37,38,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,69,70,71,72,73,75,77,79,81,83,95,102,104,105,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[11,22,41,22,22,-5,-6,22,60,61,62,63,22,22,41,-3,-4,22,22,22,22,22,22,22,22,22,88,41,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-20,22,-56,22,22,-15,22,-18,-19,-56,22,-17,22,-14,22,-22,-16,-21,]),'RPAREN':([11,13,14,15,16,18,20,34,39,40,41,42,43,58,59,64,65,66,67,68,74,76,78,80,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,107,109,116,125,129,],[-56,17,-24,-25,-11,-56,-23,-50,-34,-35,-56,68,-51,-29,-30,-7,94,-27,-28,-49,-39,-40,-41,-42,-43,-36,-37,-38,-8,-56,103,104,106,-31,-56,-44,-45,-46,-47,-48,108,-56,-33,-26,116,-32,130,-9,]),'COMMA':([14,16,34,43,66,68,74,76,78,80,82,84,85,86,89,94,103,116,],[18,-11,-50,-51,95,-49,-39,-40,-41,-42,-43,-36,-37,-38,102,-31,-33,-32,]),'EQUALS':([16,21,30,48,49,50,51,52,],[-11,38,56,75,77,79,81,83,]),'LBRACKET':([17,104,106,108,121,130,],[19,110,113,115,127,133,]),'RBRACKET':([19,23,24,25,28,29,45,46,47,110,111,113,114,115,117,119,120,122,123,124,126,127,128,131,132,133,134,135,136,137,],[-56,44,-56,-13,-5,-6,-12,-3,-4,-56,-20,-56,-56,-56,124,126,-15,-18,129,-19,-56,-56,-17,-14,135,-56,-22,-16,137,-21,]),'VOID':([19,24,28,29,46,47,62,104,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[31,31,-5,-6,-3,-4,31,31,31,31,-20,31,-56,31,31,-15,31,-18,-19,-56,31,-17,31,-14,31,-22,-16,-21,]),'RETURN':([19,24,28,29,46,47,62,104,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[32,32,-5,-6,-3,-4,32,32,32,32,-20,32,-56,32,32,-15,32,-18,-19,-56,32,-17,32,-14,32,-22,-16,-21,]),'PRINTF':([19,22,24,28,29,32,38,41,46,47,48,49,50,51,52,53,54,55,56,61,62,63,69,70,71,72,73,75,77,79,81,83,95,102,104,105,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[33,33,33,-5,-6,33,33,33,-3,-4,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-20,33,-56,33,33,-15,33,-18,-19,-56,33,-17,33,-14,33,-22,-16,-21,]),'NUMBER':([19,22,24,28,29,32,38,41,46,47,48,49,50,51,52,53,54,55,56,61,62,63,69,70,71,72,73,75,77,79,81,83,95,102,104,105,106,110,111,113,114,115,118,120,121,122,124,126,127,128,130,131,133,134,135,137,],[34,34,34,-5,-6,34,34,34,-3,-4,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-20,34,-56,34,34,-15,34,-18,-19,-56,34,-17,34,-14,34,-22,-16,-21,]),'WHILE':([19,24,28,29,46,47,104,106,110,111,113,114,115,120,121,122,124,126,127,128,130,131,133,134,135,137,],[35,35,-5,-6,-3,-4,35,35,35,-20,35,-56,35,-15,35,-18,-19,-56,35,-17,35,-14,35,-22,-16,-21,]),'FOR':([19,24,28,29,46,47,104,106,110,111,113,114,115,120,121,122,124,126,127,128,130,131,133,134,135,137,],[36,36,-5,-6,-3,-4,36,36,36,-20,36,-56,36,-15,36,-18,-19,-56,36,-17,36,-14,36,-22,-16,-21,]),'IF':([19,24,28,29,46,47,104,106,110,111,113,114,115,120,121,122,124,126,127,128,130,131,133,134,135,137,],[37,37,-5,-6,-3,-4,37,37,37,-20,37,-56,37,-15,37,-18,-19,-56,37,-17,37,-14,37,-22,-16,-21,]),'INCREMENT':([21,],[39,]),'DECREMENT':([21,],[40,]),'SEMICOLON':([21,26,27,34,39,40,43,58,59,64,68,74,76,78,80,82,84,85,86,87,91,94,96,97,98,99,100,103,112,116,129,],[-51,46,47,-50,-34,-35,-51,-29,-30,-7,-49,-39,-40,-41,-42,-43,-36,-37,-38,-8,105,-31,-44,-45,-46,-47,-48,-33,118,-32,-9,]),'PLUS':([21,27,34,42,43,58,59,64,66,68,74,76,78,80,82,84,85,86,87,90,92,93,94,96,97,98,99,100,103,112,116,],[-51,48,-50,69,-51,-51,69,69,69,-49,69,69,69,69,69,69,69,69,69,69,48,69,-31,69,69,69,69,69,-33,69,-32,]),'MINUS':([21,27,34,42,43,58,59,64,66,68,74,76,78,80,82,84,85,86,87,90,92,93,94,96,97,98,99,100,103,112,116,],[-51,49,-50,70,-51,-51,70,70,70,-49,70,70,70,70,70,70,70,70,70,70,49,70,-31,70,70,70,70,70,-33,70,-32,]),'TIMES':([21,27,34,42,43,58,59,64,66,68,74,76,78,80,82,84,85,86,87,90,92,93,94,96,97,98,99,100,103,112,116,],[-51,50,-50,71,-51,-51,71,71,71,-49,71,71,71,71,71,71,71,71,71,71,50,71,-31,71,71,71,71,71,-33,71,-32,]),'DIVIDE':([21,27,34,42,43,58,59,64,66,68,74,76,78,80,82,84,85,86,87,90,92,93,94,96,97,98,99,100,103,112,116,],[-51,51,-50,72,-51,-51,72,72,72,-49,72,72,72,72,72,72,72,72,72,72,51,72,-31,72,72,72,72,72,-33,72,-32,]),'MODULO':([21,27,34,42,43,58,59,64,66,68,74,76,78,80,82,84,85,86,87,90,92,93,94,96,97,98,99,100,103,112,116,],[-51,52,-50,73,-51,-51,73,73,73,-49,73,73,73,73,73,73,73,73,73,73,52,73,-31,73,73,73,73,73,-33,73,-32,]),'COMPARISON':([21,27,34,42,43,58,59,64,66,68,74,76,78,80,82,84,85,86,87,90,92,93,94,96,97,98,99,100,103,112,116,],[-51,53,-50,53,-51,-51,53,53,53,-49,53,53,53,53,53,53,53,53,53,53,53,53,-31,53,53,53,53,53,-33,53,-32,]),'GREATER':([21,27,34,42,43,58,59,64,66,68,74,76,78,80,82,84,85,86,87,90,92,93,94,96,97,98,99,100,103,112,116,],[-51,54,-50,54,-51,-51,54,54,54,-49,54,54,54,54,54,54,54,54,54,54,54,54,-31,54,54,54,54,54,-33,54,-32,]),'LESS':([21,27,34,42,43,58,59,64,66,68,74,76,78,80,82,84,85,86,87,90,92,93,94,96,97,98,99,100,103,112,116,],[-51,55,-50,55,-51,-51,55,55,55,-49,55,55,55,55,55,55,55,55,55,55,55,55,-31,55,55,55,55,55,-33,55,-32,]),'ELSE':([28,29,46,47,111,114,120,122,124,126,128,131,134,135,137,],[-5,-6,-3,-4,-20,121,-15,-18,-19,121,-17,-14,-22,-16,-21,]),'STRING':([60,],[89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,9,]),'function_declaration':([0,2,],[2,2,]),'empty':([0,2,11,18,19,24,41,88,95,102,110,113,114,115,126,127,133,],[3,3,15,15,25,25,67,15,67,67,25,25,122,25,122,25,25,]),'type':([0,2,11,18,19,24,62,88,104,106,110,113,115,118,121,127,130,133,],[4,4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'args':([11,18,88,],[13,20,101,]),'declaration':([11,18,19,24,62,88,104,106,110,113,115,118,121,127,130,133,],[14,14,30,30,30,14,30,30,30,30,30,30,30,30,30,30,]),'body':([19,24,110,113,115,127,133,],[23,45,117,119,123,132,136,]),'line':([19,24,104,106,110,113,115,121,127,130,133,],[24,24,111,114,24,24,24,128,24,134,24,]),'statement':([19,24,62,104,106,110,113,115,118,121,127,130,133,],[26,26,91,26,26,26,26,26,125,26,26,26,26,]),'expression':([19,22,24,32,38,41,48,49,50,51,52,53,54,55,56,61,62,63,69,70,71,72,73,75,77,79,81,83,95,102,104,105,106,110,113,115,118,121,127,130,133,],[27,42,27,59,64,66,74,76,78,80,82,84,85,86,87,90,92,93,74,76,78,80,82,96,97,98,99,100,66,66,27,112,27,27,27,27,92,27,27,27,27,]),'loop_statement':([19,24,104,106,110,113,115,121,127,130,133,],[28,28,28,28,28,28,28,28,28,28,28,]),'if_statement':([19,24,104,106,110,113,115,121,127,130,133,],[29,29,29,29,29,29,29,29,29,29,29,]),'function_args':([41,95,102,],[65,107,109,]),'else_statement':([114,126,],[120,131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_declaration program','program',2,'p_program','main.py',105),
  ('program -> empty','program',1,'p_program','main.py',106),
  ('line -> statement SEMICOLON','line',2,'p_line','main.py',109),
  ('line -> expression SEMICOLON','line',2,'p_line','main.py',110),
  ('line -> loop_statement','line',1,'p_line','main.py',111),
  ('line -> if_statement','line',1,'p_line','main.py',112),
  ('statement -> ID EQUALS expression','statement',3,'p_assign','main.py',118),
  ('statement -> declaration EQUALS expression','statement',3,'p_assign','main.py',119),
  ('statement -> VOID ID LPAREN args RPAREN LBRACKET body RBRACKET','statement',8,'p_void_function_declaration','main.py',124),
  ('function_declaration -> type ID LPAREN args RPAREN LBRACKET body RBRACKET','function_declaration',8,'p_function_declaration','main.py',128),
  ('declaration -> type ID','declaration',2,'p_declaration','main.py',159),
  ('body -> line body','body',2,'p_body','main.py',163),
  ('body -> empty','body',1,'p_body','main.py',164),
  ('if_statement -> IF LPAREN expression RPAREN LBRACKET body RBRACKET else_statement','if_statement',8,'p_if','main.py',176),
  ('if_statement -> IF LPAREN expression RPAREN line else_statement','if_statement',6,'p_if','main.py',177),
  ('else_statement -> ELSE LBRACKET body RBRACKET','else_statement',4,'p_else','main.py',193),
  ('else_statement -> ELSE line','else_statement',2,'p_else','main.py',194),
  ('else_statement -> empty','else_statement',1,'p_else','main.py',195),
  ('loop_statement -> WHILE LPAREN expression RPAREN LBRACKET body RBRACKET','loop_statement',7,'p_while','main.py',208),
  ('loop_statement -> WHILE LPAREN expression RPAREN line','loop_statement',5,'p_while','main.py',209),
  ('loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET body RBRACKET','loop_statement',11,'p_for','main.py',220),
  ('loop_statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN line','loop_statement',9,'p_for','main.py',221),
  ('args -> declaration COMMA args','args',3,'p_args','main.py',234),
  ('args -> declaration','args',1,'p_args','main.py',235),
  ('args -> empty','args',1,'p_args','main.py',236),
  ('function_args -> expression COMMA function_args','function_args',3,'p_function_args','main.py',246),
  ('function_args -> expression','function_args',1,'p_function_args','main.py',247),
  ('function_args -> empty','function_args',1,'p_function_args','main.py',248),
  ('statement -> RETURN ID','statement',2,'p_return_statement','main.py',256),
  ('statement -> RETURN expression','statement',2,'p_return_statement','main.py',257),
  ('expression -> ID LPAREN function_args RPAREN','expression',4,'p_function_call','main.py',263),
  ('expression -> PRINTF LPAREN STRING COMMA function_args RPAREN','expression',6,'p_printf','main.py',273),
  ('expression -> PRINTF LPAREN STRING RPAREN','expression',4,'p_printf','main.py',274),
  ('statement -> ID INCREMENT','statement',2,'p_increment','main.py',297),
  ('statement -> ID DECREMENT','statement',2,'p_increment','main.py',298),
  ('expression -> expression COMPARISON expression','expression',3,'p_expression_compare','main.py',306),
  ('expression -> expression GREATER expression','expression',3,'p_expression_compare','main.py',307),
  ('expression -> expression LESS expression','expression',3,'p_expression_compare','main.py',308),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',313),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',314),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',315),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',316),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','main.py',317),
  ('statement -> expression PLUS EQUALS expression','statement',4,'p_operation_assignment','main.py',323),
  ('statement -> expression MINUS EQUALS expression','statement',4,'p_operation_assignment','main.py',324),
  ('statement -> expression TIMES EQUALS expression','statement',4,'p_operation_assignment','main.py',325),
  ('statement -> expression DIVIDE EQUALS expression','statement',4,'p_operation_assignment','main.py',326),
  ('statement -> expression MODULO EQUALS expression','statement',4,'p_operation_assignment','main.py',327),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','main.py',332),
  ('expression -> NUMBER','expression',1,'p_expression_number','main.py',336),
  ('expression -> ID','expression',1,'p_expression_id','main.py',340),
  ('type -> INT','type',1,'p_type','main.py',345),
  ('type -> FLOAT','type',1,'p_type','main.py',346),
  ('type -> DOUBLE','type',1,'p_type','main.py',347),
  ('type -> CHAR','type',1,'p_type','main.py',348),
  ('empty -> <empty>','empty',0,'p_empty','main.py',352),
]
